// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cheats Component renders component successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CategoryCard
    categoryId="12345"
    cheatModalShow={[MockFunction]}
    cheats={
      Object {
        "command": Array [
          Object {
            "description": "to",
          },
          Object {
            "description": "toto",
          },
        ],
        "userId": "1122",
      }
    }
    deleteCategory={[MockFunction]}
    deleteCheat={[MockFunction]}
    onCopy={[MockFunction]}
    onShow={[MockFunction]}
    search=""
    userId="1234"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card-body"
        style={
          Object {
            "padding": "5%",
          }
        }
      >
        <div>
          <div
            className="pull-right"
          >
            <button
              className="btn btn-sm btn-warning"
              onClick={[Function]}
            >
              <i
                className="far fa-edit"
              />
            </button>
             
            <button
              className="btn btn-sm btn-danger"
              onClick={[Function]}
            >
              <i
                className="far fa-trash-alt"
              />
            </button>
          </div>
          <h5
            className="card-title pb-2 pt-1 text-white bg-dark"
          >
            <CategoryHeader />
          </h5>
          <hr />
          <Cheats
            categoryId="12345"
            cheat={
              Object {
                "description": "to",
              }
            }
            deleteCheat={[MockFunction]}
            onCopy={[MockFunction]}
            userId="1234"
          />
          <Cheats
            categoryId="12345"
            cheat={
              Object {
                "description": "toto",
              }
            }
            deleteCheat={[MockFunction]}
            onCopy={[MockFunction]}
            userId="1234"
          />
          <button
            className="btn btn-primary center btn-lg"
            onClick={[Function]}
          >
            <i
              className="fas fa-plus-circle"
            />
          </button>
          <br />
        </div>
      </div>,
      "className": "card card-cascade narrower bg-dark",
      "style": Object {
        "borderRadius": "2%",
        "width": "33%",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            className="pull-right"
          >
            <button
              className="btn btn-sm btn-warning"
              onClick={[Function]}
            >
              <i
                className="far fa-edit"
              />
            </button>
             
            <button
              className="btn btn-sm btn-danger"
              onClick={[Function]}
            >
              <i
                className="far fa-trash-alt"
              />
            </button>
          </div>
          <h5
            className="card-title pb-2 pt-1 text-white bg-dark"
          >
            <CategoryHeader />
          </h5>
          <hr />
          <Cheats
            categoryId="12345"
            cheat={
              Object {
                "description": "to",
              }
            }
            deleteCheat={[MockFunction]}
            onCopy={[MockFunction]}
            userId="1234"
          />
          <Cheats
            categoryId="12345"
            cheat={
              Object {
                "description": "toto",
              }
            }
            deleteCheat={[MockFunction]}
            onCopy={[MockFunction]}
            userId="1234"
          />
          <button
            className="btn btn-primary center btn-lg"
            onClick={[Function]}
          >
            <i
              className="fas fa-plus-circle"
            />
          </button>
          <br />
        </div>,
        "className": "card-body",
        "style": Object {
          "padding": "5%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="pull-right"
            >
              <button
                className="btn btn-sm btn-warning"
                onClick={[Function]}
              >
                <i
                  className="far fa-edit"
                />
              </button>
               
              <button
                className="btn btn-sm btn-danger"
                onClick={[Function]}
              >
                <i
                  className="far fa-trash-alt"
                />
              </button>
            </div>,
            <h5
              className="card-title pb-2 pt-1 text-white bg-dark"
            >
              <CategoryHeader />
            </h5>,
            <hr />,
            Array [
              <Cheats
                categoryId="12345"
                cheat={
                  Object {
                    "description": "to",
                  }
                }
                deleteCheat={[MockFunction]}
                onCopy={[MockFunction]}
                userId="1234"
              />,
              <Cheats
                categoryId="12345"
                cheat={
                  Object {
                    "description": "toto",
                  }
                }
                deleteCheat={[MockFunction]}
                onCopy={[MockFunction]}
                userId="1234"
              />,
            ],
            <button
              className="btn btn-primary center btn-lg"
              onClick={[Function]}
            >
              <i
                className="fas fa-plus-circle"
              />
            </button>,
            <br />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-sm btn-warning"
                  onClick={[Function]}
                >
                  <i
                    className="far fa-edit"
                  />
                </button>,
                " ",
                <button
                  className="btn btn-sm btn-danger"
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </button>,
              ],
              "className": "pull-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="far fa-edit"
                  />,
                  "className": "btn btn-sm btn-warning",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "far fa-edit",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "button",
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="far fa-trash-alt"
                  />,
                  "className": "btn btn-sm btn-danger",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "far fa-trash-alt",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CategoryHeader />,
              "className": "card-title pb-2 pt-1 text-white bg-dark",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "categoryTitle": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "hr",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "categoryId": "12345",
              "cheat": Object {
                "description": "to",
              },
              "deleteCheat": [MockFunction],
              "onCopy": [MockFunction],
              "userId": "1234",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "categoryId": "12345",
              "cheat": Object {
                "description": "toto",
              },
              "deleteCheat": [MockFunction],
              "onCopy": [MockFunction],
              "userId": "1234",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-plus-circle"
              />,
              "className": "btn btn-primary center btn-lg",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-plus-circle",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card-body"
          style={
            Object {
              "padding": "5%",
            }
          }
        >
          <div>
            <div
              className="pull-right"
            >
              <button
                className="btn btn-sm btn-warning"
                onClick={[Function]}
              >
                <i
                  className="far fa-edit"
                />
              </button>
               
              <button
                className="btn btn-sm btn-danger"
                onClick={[Function]}
              >
                <i
                  className="far fa-trash-alt"
                />
              </button>
            </div>
            <h5
              className="card-title pb-2 pt-1 text-white bg-dark"
            >
              <CategoryHeader />
            </h5>
            <hr />
            <Cheats
              categoryId="12345"
              cheat={
                Object {
                  "description": "to",
                }
              }
              deleteCheat={[MockFunction]}
              onCopy={[MockFunction]}
              userId="1234"
            />
            <Cheats
              categoryId="12345"
              cheat={
                Object {
                  "description": "toto",
                }
              }
              deleteCheat={[MockFunction]}
              onCopy={[MockFunction]}
              userId="1234"
            />
            <button
              className="btn btn-primary center btn-lg"
              onClick={[Function]}
            >
              <i
                className="fas fa-plus-circle"
              />
            </button>
            <br />
          </div>
        </div>,
        "className": "card card-cascade narrower bg-dark",
        "style": Object {
          "borderRadius": "2%",
          "width": "33%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <div
              className="pull-right"
            >
              <button
                className="btn btn-sm btn-warning"
                onClick={[Function]}
              >
                <i
                  className="far fa-edit"
                />
              </button>
               
              <button
                className="btn btn-sm btn-danger"
                onClick={[Function]}
              >
                <i
                  className="far fa-trash-alt"
                />
              </button>
            </div>
            <h5
              className="card-title pb-2 pt-1 text-white bg-dark"
            >
              <CategoryHeader />
            </h5>
            <hr />
            <Cheats
              categoryId="12345"
              cheat={
                Object {
                  "description": "to",
                }
              }
              deleteCheat={[MockFunction]}
              onCopy={[MockFunction]}
              userId="1234"
            />
            <Cheats
              categoryId="12345"
              cheat={
                Object {
                  "description": "toto",
                }
              }
              deleteCheat={[MockFunction]}
              onCopy={[MockFunction]}
              userId="1234"
            />
            <button
              className="btn btn-primary center btn-lg"
              onClick={[Function]}
            >
              <i
                className="fas fa-plus-circle"
              />
            </button>
            <br />
          </div>,
          "className": "card-body",
          "style": Object {
            "padding": "5%",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="pull-right"
              >
                <button
                  className="btn btn-sm btn-warning"
                  onClick={[Function]}
                >
                  <i
                    className="far fa-edit"
                  />
                </button>
                 
                <button
                  className="btn btn-sm btn-danger"
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </button>
              </div>,
              <h5
                className="card-title pb-2 pt-1 text-white bg-dark"
              >
                <CategoryHeader />
              </h5>,
              <hr />,
              Array [
                <Cheats
                  categoryId="12345"
                  cheat={
                    Object {
                      "description": "to",
                    }
                  }
                  deleteCheat={[MockFunction]}
                  onCopy={[MockFunction]}
                  userId="1234"
                />,
                <Cheats
                  categoryId="12345"
                  cheat={
                    Object {
                      "description": "toto",
                    }
                  }
                  deleteCheat={[MockFunction]}
                  onCopy={[MockFunction]}
                  userId="1234"
                />,
              ],
              <button
                className="btn btn-primary center btn-lg"
                onClick={[Function]}
              >
                <i
                  className="fas fa-plus-circle"
                />
              </button>,
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn btn-sm btn-warning"
                    onClick={[Function]}
                  >
                    <i
                      className="far fa-edit"
                    />
                  </button>,
                  " ",
                  <button
                    className="btn btn-sm btn-danger"
                    onClick={[Function]}
                  >
                    <i
                      className="far fa-trash-alt"
                    />
                  </button>,
                ],
                "className": "pull-right",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="far fa-edit"
                    />,
                    "className": "btn btn-sm btn-warning",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "far fa-edit",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "button",
                },
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="far fa-trash-alt"
                    />,
                    "className": "btn btn-sm btn-danger",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "far fa-trash-alt",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "button",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CategoryHeader />,
                "className": "card-title pb-2 pt-1 text-white bg-dark",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "categoryTitle": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "categoryId": "12345",
                "cheat": Object {
                  "description": "to",
                },
                "deleteCheat": [MockFunction],
                "onCopy": [MockFunction],
                "userId": "1234",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "categoryId": "12345",
                "cheat": Object {
                  "description": "toto",
                },
                "deleteCheat": [MockFunction],
                "onCopy": [MockFunction],
                "userId": "1234",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-plus-circle"
                />,
                "className": "btn btn-primary center btn-lg",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-plus-circle",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

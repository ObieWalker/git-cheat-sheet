// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Landing page Component renders component successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LandingPage
    addCategory={[MockFunction]}
    addCheat={[MockFunction]}
    deleteCategory={[MockFunction]}
    deleteCheat={[MockFunction]}
    editCategory={[MockFunction]}
    getAllCheats={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {},
          },
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    logOut={[MockFunction]}
    userData={
      Object {
        "isAuthenticated": false,
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="waves-effect waves-dark pull-right hoverable dark-green btn btn-danger"
          id="add-grocery"
          onClick={[Function]}
          type="submit"
        >
           Logout
        </button>,
        <div>
          <SearchBar
            updateSearch={[Function]}
          />
          <button
            className="waves-effect waves-dark hoverable dark-green btn btn-primary"
            id="add-grocery"
            onClick={[Function]}
            type="submit"
          >
            Create new Category
          </button>
        </div>,
        <br />,
        <div
          className="container"
        >
          <Connect(Categories)
            cheatModalShow={[Function]}
            deleteCategory={[Function]}
            deleteCheat={[Function]}
            onCopy={[Function]}
            onShow={[Function]}
            search=""
          />
        </div>,
        <CategoryModal
          addCategory={[Function]}
          category={Object {}}
          editCategory={[Function]}
          errors={Object {}}
          onHide={[Function]}
          show={false}
          updateDetails={[Function]}
        />,
        <CheatModal
          addCheat={[Function]}
          category={Object {}}
          categoryTitle=""
          cheatModalShow={false}
          errors={Object {}}
          onHide={[Function]}
          show={false}
          updateDetails={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " Logout",
          "className": "waves-effect waves-dark pull-right hoverable dark-green btn btn-danger",
          "id": "add-grocery",
          "onClick": [Function],
          "type": "submit",
        },
        "ref": null,
        "rendered": " Logout",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SearchBar
              updateSearch={[Function]}
            />,
            <button
              className="waves-effect waves-dark hoverable dark-green btn btn-primary"
              id="add-grocery"
              onClick={[Function]}
              type="submit"
            >
              Create new Category
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "updateSearch": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create new Category",
              "className": "waves-effect waves-dark hoverable dark-green btn btn-primary",
              "id": "add-grocery",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Create new Category",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(Categories)
            cheatModalShow={[Function]}
            deleteCategory={[Function]}
            deleteCheat={[Function]}
            onCopy={[Function]}
            onShow={[Function]}
            search=""
          />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cheatModalShow": [Function],
            "deleteCategory": [Function],
            "deleteCheat": [Function],
            "onCopy": [Function],
            "onShow": [Function],
            "search": "",
            "userId": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addCategory": [Function],
          "category": Object {},
          "editCategory": [Function],
          "errors": Object {},
          "onHide": [Function],
          "show": false,
          "updateDetails": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addCheat": [Function],
          "category": Object {},
          "categoryTitle": "",
          "cheatModalShow": false,
          "errors": Object {},
          "onHide": [Function],
          "show": false,
          "updateDetails": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="waves-effect waves-dark pull-right hoverable dark-green btn btn-danger"
            id="add-grocery"
            onClick={[Function]}
            type="submit"
          >
             Logout
          </button>,
          <div>
            <SearchBar
              updateSearch={[Function]}
            />
            <button
              className="waves-effect waves-dark hoverable dark-green btn btn-primary"
              id="add-grocery"
              onClick={[Function]}
              type="submit"
            >
              Create new Category
            </button>
          </div>,
          <br />,
          <div
            className="container"
          >
            <Connect(Categories)
              cheatModalShow={[Function]}
              deleteCategory={[Function]}
              deleteCheat={[Function]}
              onCopy={[Function]}
              onShow={[Function]}
              search=""
            />
          </div>,
          <CategoryModal
            addCategory={[Function]}
            category={Object {}}
            editCategory={[Function]}
            errors={Object {}}
            onHide={[Function]}
            show={false}
            updateDetails={[Function]}
          />,
          <CheatModal
            addCheat={[Function]}
            category={Object {}}
            categoryTitle=""
            cheatModalShow={false}
            errors={Object {}}
            onHide={[Function]}
            show={false}
            updateDetails={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Logout",
            "className": "waves-effect waves-dark pull-right hoverable dark-green btn btn-danger",
            "id": "add-grocery",
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": " Logout",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SearchBar
                updateSearch={[Function]}
              />,
              <button
                className="waves-effect waves-dark hoverable dark-green btn btn-primary"
                id="add-grocery"
                onClick={[Function]}
                type="submit"
              >
                Create new Category
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "updateSearch": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create new Category",
                "className": "waves-effect waves-dark hoverable dark-green btn btn-primary",
                "id": "add-grocery",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Create new Category",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(Categories)
              cheatModalShow={[Function]}
              deleteCategory={[Function]}
              deleteCheat={[Function]}
              onCopy={[Function]}
              onShow={[Function]}
              search=""
            />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cheatModalShow": [Function],
              "deleteCategory": [Function],
              "deleteCheat": [Function],
              "onCopy": [Function],
              "onShow": [Function],
              "search": "",
              "userId": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addCategory": [Function],
            "category": Object {},
            "editCategory": [Function],
            "errors": Object {},
            "onHide": [Function],
            "show": false,
            "updateDetails": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addCheat": [Function],
            "category": Object {},
            "categoryTitle": "",
            "cheatModalShow": false,
            "errors": Object {},
            "onHide": [Function],
            "show": false,
            "updateDetails": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
